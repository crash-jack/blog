<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.article.dao.DomainMapper">
  <resultMap id="BaseResultMap" type="com.blog.article.model.Domain">
    <id column="s_id" jdbcType="BIGINT" property="sId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    s_id, sort, url, code, state, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from s_domain
    where s_id = #{sId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from s_domain
    where s_id = #{sId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.blog.article.model.Domain">
    insert into s_domain ( sort, url, 
      code, state, create_time, 
      update_time)
    values (#{sort,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, #{state,jdbcType=CHAR}, #{createTime,jdbcType=VARCHAR}, 
      
      
      #{updateTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.blog.article.model.Domain">
    insert into s_domain
    <trim prefix="(" suffix=")" suffixOverrides=",">
     
      <if test="sort != null">
        sort,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
     
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.article.model.Domain">
    update s_domain
    <set>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    where s_id = #{sId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.article.model.Domain">
    update s_domain
    set sort = #{sort,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      state = #{state,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR}
    where s_id = #{sId,jdbcType=BIGINT}
  </update>
</mapper>